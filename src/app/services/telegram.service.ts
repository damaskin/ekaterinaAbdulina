import { Inject, Injectable } from '@angular/core';
import { DOCUMENT } from "@angular/common";
import { ITelegramWebAppData, User } from "../interface/telegram-web-app-data";
import { TranslateService } from "@ngx-translate/core";
import { ITelegramUser } from "../interface/telegram-user";
import { FirebaseService } from "./firebase.service";
import { Observable, forkJoin, of } from 'rxjs';
import { HttpClient } from "@angular/common/http";

declare global {
  interface Window {
    Telegram: any;
  }
}

@Injectable({
  providedIn: 'root'
})
export class TelegramService {
  window;
  tg;
  webAppData!: ITelegramWebAppData;
  telegramUser!: ITelegramUser;
  private botToken: string = '7704154428:AAHdcik32zNrRNqvNE4KGGUl5lzT3buYWTA'; // —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞
  private telegramApiUrl = 'https://api.telegram.org/bot7704154428:AAHdcik32zNrRNqvNE4KGGUl5lzT3buYWTA';
  // ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  private adminUserIds: number[] = [112004130, 210311255];

  constructor(
    @Inject(DOCUMENT) private _document: Document,
    private translate: TranslateService,
    private readonly firebaseService: FirebaseService,
    private http: HttpClient
  ) {
    this.window = this._document.defaultView;
    this.tg = this.window?.Telegram?.WebApp;

    // –ï—Å–ª–∏ –º—ã –∑–∞–ø—É—Å–∫–∞–µ–º—Å—è –≤–Ω—É—Ç—Ä–∏ Telegram, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (this.tg && this.tg.initDataUnsafe && this.tg.initDataUnsafe.user) {
      // –†–∞—Å—à–∏—Ä—è–µ–º –æ–∫–Ω–æ, –æ—Ç–∫–ª—é—á–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ —Å–≤–∞–π–ø—ã –∏ –≤–∫–ª—é—á–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è
      this.tg.expand();
      this.tg.disableVerticalSwipes();
      this.tg.isClosingConfirmationEnabled = true;

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ localStorage –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
      localStorage.setItem('userData', JSON.stringify(this.tg.initDataUnsafe.user));

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —è–∑—ã–∫ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤
      this.translate.use(this.tg.initDataUnsafe.user.language_code);
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –µ—Å–ª–∏ –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å –≤–Ω–µ Telegram, –ø–æ–ø—Ä–æ–±—É–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Ö –∏–∑ localStorage
    this.initUser();
  }

  getTelegramWebAppData(): any {
    if (this.tg && this.tg.initDataUnsafe) {
      return this.tg.initDataUnsafe.user || null;
    }
    return null;
  }

  showMainBtn(text: string = 'Main button text') {
    if (this.tg) {
      this.tg.MainButton.setText(text);
      this.tg.MainButton.show();
    }
  }

  hideMainBtn() {
    if (this.tg) {
      this.tg.MainButton.hide();
    }
  }

  getClientPlatform(): string {
    return this.tg ? this.tg.platform : 'unknown';
  }

  initUser(): ITelegramUser | User {
    const clientPlatform = this.getClientPlatform();
    const userData = localStorage.getItem('userData');

    // –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ —Å –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã),
    // –ø—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
    if (clientPlatform === 'unknown') {
      if (!userData) {
        return {} as User;
      } else {
        this.telegramUser = JSON.parse(userData);
        this.saveTelegramUser(this.telegramUser);
        return this.telegramUser;
      }
    } else {
      // –ï—Å–ª–∏ –º—ã –≤–Ω—É—Ç—Ä–∏ Telegram, –±–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é
      this.telegramUser = this.tg.initDataUnsafe.user;
      this.saveTelegramUser(this.telegramUser);
      return this.telegramUser;
    }
  }

  saveTelegramUser(user: ITelegramUser) {
    this.firebaseService.saveUser(user).catch((err) => {
      console.error('Error saving user:', err);
    });
  }

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  public sendMessage(chat_id: number, category: { title: string, price: number }): Observable<any> {
    const text = `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${this.telegramUser.first_name}!

–í–∞—à –ø–ª–∞—Ç—ë–∂ –∑–∞ —É—Å–ª—É–≥—É ¬´${category.title}¬ª, —Å—Ç–æ–∏–º–æ—Å—Ç—å—é ${category.price} —Ä—É–±, —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω.

–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥!`;

    const body = {
      chat_id,
      text,
      parse_mode: 'HTML'
    };
    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è:', body);
    return this.http.post(`${this.telegramApiUrl}/sendMessage`, body);
  }

  public sendMessage2(chat_id: number, category: { title: string, price: number }): Observable<any> {
    const text = `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞!
–í–∞—à –∫–ª–∏–µ–Ω—Ç "Raynor" –æ–ø–ª–∞—Ç–∏–ª —É—Å–ª—É–≥—É ¬´${category.title}¬ª, —Å—Ç–æ–∏–º–æ—Å—Ç—å—é ${category.price} —Ä—É–±.`;

    const body = {
      chat_id,
      text,
      parse_mode: 'HTML'
    };
    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è:', body);
    return this.http.post(`${this.telegramApiUrl}/sendMessage`, body);
  }

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–∫–∞–∑–∞ "–æ–ø–ª–∞—á–µ–Ω"
  public sendOrderPaidNotificationsToAdmins(order: any): Observable<any[]> {
    if (!order) {
      console.error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
      return of([]);
    }

    const user = order.user || this.telegramUser;
    const category = order.category;
    const orderId = order.id;
    const paymentMethod = order.paymentMethod;
    const paymentAmount = category ? category.price : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–µ—Ç–∞–ª—è–º–∏ –∑–∞–∫–∞–∑–∞
    const text = `üîî –ù–æ–≤—ã–π –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑!
    
üìã –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:
ID: ${orderId}
–£—Å–ª—É–≥–∞: ${category ? category.title : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
–°—É–º–º–∞: ${paymentAmount} ‚ÇΩ
–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã: ${paymentMethod || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
–î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}

üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ:
ID: ${user.id || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
–ò–º—è: ${user.first_name || ''} ${user.last_name || ''}
–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.username ? '@' + user.username : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    const notifications = this.adminUserIds.map(adminId => {
      const body = {
        chat_id: adminId,
        text,
        parse_mode: 'HTML'
      };
      console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ID ${adminId}:`, body);
      return this.http.post(`${this.telegramApiUrl}/sendMessage`, body);
    });

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞–±–ª—é–¥–∞–µ–º—ã–π –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    return forkJoin(notifications);
  }
}
